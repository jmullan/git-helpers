#!/bin/bash
GIT_DIR=$(git rev-parse --git-dir 2>/dev/null)
if [ -z "$GIT_DIR" ] ; then
    exit 1
fi
HEADS=$(find ${GIT_DIR}/logs/refs/heads -mindepth 1 -type f | sed "s#${GIT_DIR}/logs/refs/heads/##" | sort)
BRANCHES="${HEADS}"
ARGCOUNT=$#
if [ $ARGCOUNT -eq 1 ] ; then
    if [ "$1" == "--include-remote" ] ; then
        REMOTES=$(find ${GIT_DIR}/logs/refs/remotes -mindepth 1 -type f | sed "s#${GIT_DIR}/logs/refs/remotes/##")
        BRANCHES="${HEADS}"$'\n'"${REMOTES}"
    fi
fi
ORIGIN_DEVELOP=$(git for-each-ref --format='%(refname:short)' refs/heads refs/remotes/origin | grep ^origin/develop$)
ORIGIN_MASTER=$(git for-each-ref --format='%(refname:short)' refs/heads refs/remotes/origin | grep ^origin/master$)
IFS=$'\n'
for branch in $BRANCHES; do
    FEATURE=$(echo "${branch}" | grep feature/)
    if [ -n "${FEATURE}" ] && [ -n "${ORIGIN_DEVELOP}" ] ; then
        FROM="origin/develop"
    else
        FROM="origin/master"
    fi
    AHEAD=$(git ahead "${branch}" "$FROM")
    BEHIND=$(git behind "${branch}" "$FROM")
    COMMIT_DATE=$(git log "${branch}" --pretty=format:"%ad" | head -1)
    TRACKING=$(git rev-parse --abbrev-ref --symbolic-full-name "${branch}@{u}" 2>/dev/null)
    if [ $? != 0 ] ; then
        TRACKING="Upstream gone"
    fi
    echo "${branch}	-${BEHIND}	+${AHEAD}	(${FROM}) ${TRACKING} ${COMMIT_DATE}"
done
